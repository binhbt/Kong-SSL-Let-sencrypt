version: '3'

services:
  kong-database:
    image: postgres:9.6.11-alpine
    container_name: kong-database
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
    healthcheck:
      test: pg_isready -U kong && psql -d kong -U kong -c "SELECT 1=1"
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: leo/kong-migration
    build: ./kong
    container_name: kong-migration
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
    command: sh -c "(kong migrations up || kong migrations bootstrap) && touch migrations_run && sleep 30"
    healthcheck:
      test: "if [[ -f migrations_run ]] ; then exit 0; else exit 1; fi"
      interval: 10s
      timeout: 5s
      retries: 5

  kong4:
    build: ./kong
    container_name: kong4
    image: leo/kong
    volumes: 
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_SSL_CERT: /etc/letsencrypt/live/kong.sigma-solutions.vn/fullchain.pem
      KONG_SSL_CERT_KEY: /etc/letsencrypt/live/kong.sigma-solutions.vn/privkey.pem
    ports:
      - 80:8000
      - 8001:8001
      - 8443:8443
    healthcheck:
      test: kong health
      interval: 10s
      timeout: 5s
      retries: 5
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  user:
    image: leo/user
    build: ./user
    ports:
    - "5005:5000"

volumes:
  kong_data:
  konga_data:
